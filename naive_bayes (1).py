# -*- coding: utf-8 -*-
"""naive_bayes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mTKaY_u1M1JWj5F5bSgqHiClt-VCOnX2
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

#diatas itu sintaks untuk import library python

dataset = pd.read_csv("dataset-ayu.csv")
x = dataset.iloc[:, [3,4]].values
y = dataset.iloc[:, -2].values

#membaca dataset dan membuat var training serta testing

print(x)

print(y)

from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(x,y,test_size = 0.25, random_state=0)

print(x_train)

print(x_test)

print(y_train)

print(y_test)

#dipake buat ngecilin interval

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
x_train = sc.fit_transform(x_train)
x_test = sc.transform(x_test)

print(x_train)

print(x_test)

from sklearn.naive_bayes import GaussianNB
classifier = GaussianNB()
classifier.fit(x_train,y_train)

y_pred = classifier.predict(x_test)

from sklearn.metrics import confusion_matrix
cm = confusion_matrix(y_test,y_pred)
print(cm)

from matplotlib.colors import ListedColormap
x_set, y_set = x_test , y_test
x1 , x2 = np.meshgrid(np.arange(start = x_set[:, 0].min()-1,stop=x_set[:,0].max() +1, step = 0.01),
                      np.arange(start = x_set[:, 1].min()-1,stop=x_set[:,0].max() +1, step = 0.01))
plt.contourf(x1,x2, classifier.predict(np.array([x1.ravel(),x2.ravel()]).T).reshape(x1.shape),
            alpha = 0.75, cmap = ListedColormap(('red','green')))
plt.xlim(x1.min(), x1.max())
plt.ylim(x2.min(), x2.max())
for i,j in enumerate (np.unique(y_test)):
  plt.scatter(x_set[y_set == j, 0], x_set[y_set == j, 1],
              c = ListedColormap(('red','green'))(i),label = j)
plt.title('Klasifikasi Datan dengan Native Bayes (Data Testing)')
plt.xlabel('SESSION PLANNED FOR COVISHIELD')
plt.ylabel('SESSION HELD FOR COVISHIELD')
plt.legend()
plt.show()

from matplotlib.colors import ListedColormap
x_set, y_set = x_train , y_train
x1 , x2 = np.meshgrid(np.arange(start = x_set[:, 0].min()-1,stop=x_set[:,0].max() +1, step = 0.01),
                      np.arange(start = x_set[:, 1].min()-1,stop=x_set[:,0].max() +1, step = 0.01))
plt.contourf(x1,x2, classifier.predict(np.array([x1.ravel(),x2.ravel()]).T).reshape(x1.shape),
            alpha = 0.75, cmap = ListedColormap(('red','green')))
plt.xlim(x1.min(), x1.max())
plt.ylim(x2.min(), x2.max())
for i,j in enumerate (np.unique(y_test)):
  plt.scatter(x_set[y_set == j, 0], x_set[y_set == j, 1],
              c = ListedColormap(('red','green'))(i),label = j)
plt.title('Klasifikasi Data dengan Native Bayes (Data Training)')
plt.xlabel('SESSION PLANNED FOR COVISHIELD')
plt.ylabel('SESSION HELD FOR COVISHIELD')
plt.legend()
plt.show()



